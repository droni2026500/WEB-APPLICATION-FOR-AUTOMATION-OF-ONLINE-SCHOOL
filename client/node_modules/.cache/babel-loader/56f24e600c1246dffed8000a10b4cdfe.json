{"ast":null,"code":"import _slicedToArray from \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/components/curators/CuratorsTable1.js\";\n\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../index\";\nimport { toJS } from \"mobx\";\n\nvar getRenderCell = function getRenderCell(_ref) {\n  var field = _ref.field,\n      value = _ref.value;\n\n  if (field === \"link\") {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\");\n  }\n};\n\nvar CuratorTable1 = function CuratorTable1(_ref2) {\n  var rows = _ref2.rows,\n      columns = _ref2.columns;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 300,\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar CuratorTableData = function CuratorTableData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      columns = _useState4[0],\n      setColumns = _useState4[1];\n\n  var _useContext = useContext(Context),\n      store = _useContext.store;\n\n  useEffect(function () {\n    var flow = toJS(store.flowData);\n    var curator = toJS(store.curatorData);\n    store.getCuratorTable(flow, curator).then(function (response) {\n      var requiredDataFromResponse = response;\n      var columns_data = requiredDataFromResponse[0].map(function (eachSensorItem) {\n        return {\n          headerName: eachSensorItem.Header,\n          field: eachSensorItem.accessor,\n          renderCell: getRenderCell,\n          editable: eachSensorItem.editable\n        };\n      });\n      console.log(requiredDataFromResponse[1]);\n      var rows_data = requiredDataFromResponse[1].map(function (eachSensorItem) {\n        return {\n          id: eachSensorItem.first_name,\n          first_name: eachSensorItem.first_name,\n          last_name: eachSensorItem.last_name,\n          email: eachSensorItem.email,\n          chat: eachSensorItem.chat,\n          link: eachSensorItem.link,\n          col1: eachSensorItem.cols.col1,\n          col2: eachSensorItem.cols.col2\n        };\n      });\n      setColumns(columns_data);\n      setRows(rows_data);\n    }).catch(function (error) {\n      setColumns([]);\n      setRows([]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CuratorTable1, {\n    rows: rows,\n    columns: columns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function CuratorTable12() {\n  return /*#__PURE__*/React.createElement(CuratorTableData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"names":["DataGrid","React","useContext","useEffect","useState","Context","toJS","getRenderCell","field","value","CuratorTable1","rows","columns","height","width","CuratorTableData","setRows","setColumns","store","flow","flowData","curator","curatorData","getCuratorTable","then","response","requiredDataFromResponse","columns_data","map","eachSensorItem","headerName","Header","accessor","renderCell","editable","console","log","rows_data","id","first_name","last_name","email","chat","link","col1","cols","col2","catch","error","CuratorTable12"],"sources":["/Users/skhotwow/Desktop/Диплом/client/src/components/curators/CuratorsTable1.js"],"sourcesContent":["import { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../../index\";\nimport { toJS } from \"mobx\";\n\nconst getRenderCell = ({ field, value }) => {\n  if (field === \"link\") {\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={value}>\n        Профиль\n      </a>\n    );\n  }\n};\n\nconst CuratorTable1 = ({ rows, columns }) => {\n  return (\n    <div style={{ height: 300, width: \"100%\" }}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  );\n};\n\nconst CuratorTableData = () => {\n  const [rows, setRows] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const { store } = useContext(Context);\n\n  useEffect(() => {\n    const flow = toJS(store.flowData);\n    const curator = toJS(store.curatorData);\n    store\n      .getCuratorTable(flow, curator)\n      .then((response) => {\n        const requiredDataFromResponse = response;\n        const columns_data = requiredDataFromResponse[0].map(\n          (eachSensorItem) => ({\n            headerName: eachSensorItem.Header,\n            field: eachSensorItem.accessor,\n            renderCell: getRenderCell,\n            editable: eachSensorItem.editable,\n          })\n        );\n        console.log(requiredDataFromResponse[1]);\n        const rows_data = requiredDataFromResponse[1].map((eachSensorItem) => ({\n          id: eachSensorItem.first_name,\n          first_name: eachSensorItem.first_name,\n          last_name: eachSensorItem.last_name,\n          email: eachSensorItem.email,\n          chat: eachSensorItem.chat,\n          link: eachSensorItem.link,\n          col1: eachSensorItem.cols.col1,\n          col2: eachSensorItem.cols.col2,\n        }));\n        setColumns(columns_data);\n        setRows(rows_data);\n      })\n      .catch((error) => {\n        setColumns([]);\n        setRows([]);\n      });\n  }, []);\n\n  return (\n    <div>\n      <CuratorTable1 rows={rows} columns={columns} />\n    </div>\n  );\n};\n\nexport default function CuratorTable12() {\n  return <CuratorTableData />;\n}\n"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAZC,KAAY,QAAZA,KAAY;;EAC1C,IAAID,KAAK,KAAK,MAAd,EAAsB;IACpB,oBACE;MAAG,MAAM,EAAC,QAAV;MAAmB,GAAG,EAAC,qBAAvB;MAA6C,IAAI,EAAEC,KAAnD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gDADF;EAKD;AACF,CARD;;AAUA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,QAAuB;EAAA,IAApBC,IAAoB,SAApBA,IAAoB;EAAA,IAAdC,OAAc,SAAdA,OAAc;EAC3C,oBACE;IAAK,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAV;MAAeC,KAAK,EAAE;IAAtB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,IAAI,EAAEH,IAAhB;IAAsB,OAAO,EAAEC,OAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD,CAND;;AAQA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAAA,gBACLX,QAAQ,CAAC,EAAD,CADH;EAAA;EAAA,IACtBO,IADsB;EAAA,IAChBK,OADgB;;EAAA,iBAECZ,QAAQ,CAAC,EAAD,CAFT;EAAA;EAAA,IAEtBQ,OAFsB;EAAA,IAEbK,UAFa;;EAAA,kBAGXf,UAAU,CAACG,OAAD,CAHC;EAAA,IAGrBa,KAHqB,eAGrBA,KAHqB;;EAK7Bf,SAAS,CAAC,YAAM;IACd,IAAMgB,IAAI,GAAGb,IAAI,CAACY,KAAK,CAACE,QAAP,CAAjB;IACA,IAAMC,OAAO,GAAGf,IAAI,CAACY,KAAK,CAACI,WAAP,CAApB;IACAJ,KAAK,CACFK,eADH,CACmBJ,IADnB,EACyBE,OADzB,EAEGG,IAFH,CAEQ,UAACC,QAAD,EAAc;MAClB,IAAMC,wBAAwB,GAAGD,QAAjC;MACA,IAAME,YAAY,GAAGD,wBAAwB,CAAC,CAAD,CAAxB,CAA4BE,GAA5B,CACnB,UAACC,cAAD;QAAA,OAAqB;UACnBC,UAAU,EAAED,cAAc,CAACE,MADR;UAEnBvB,KAAK,EAAEqB,cAAc,CAACG,QAFH;UAGnBC,UAAU,EAAE1B,aAHO;UAInB2B,QAAQ,EAAEL,cAAc,CAACK;QAJN,CAArB;MAAA,CADmB,CAArB;MAQAC,OAAO,CAACC,GAAR,CAAYV,wBAAwB,CAAC,CAAD,CAApC;MACA,IAAMW,SAAS,GAAGX,wBAAwB,CAAC,CAAD,CAAxB,CAA4BE,GAA5B,CAAgC,UAACC,cAAD;QAAA,OAAqB;UACrES,EAAE,EAAET,cAAc,CAACU,UADkD;UAErEA,UAAU,EAAEV,cAAc,CAACU,UAF0C;UAGrEC,SAAS,EAAEX,cAAc,CAACW,SAH2C;UAIrEC,KAAK,EAAEZ,cAAc,CAACY,KAJ+C;UAKrEC,IAAI,EAAEb,cAAc,CAACa,IALgD;UAMrEC,IAAI,EAAEd,cAAc,CAACc,IANgD;UAOrEC,IAAI,EAAEf,cAAc,CAACgB,IAAf,CAAoBD,IAP2C;UAQrEE,IAAI,EAAEjB,cAAc,CAACgB,IAAf,CAAoBC;QAR2C,CAArB;MAAA,CAAhC,CAAlB;MAUA7B,UAAU,CAACU,YAAD,CAAV;MACAX,OAAO,CAACqB,SAAD,CAAP;IACD,CAzBH,EA0BGU,KA1BH,CA0BS,UAACC,KAAD,EAAW;MAChB/B,UAAU,CAAC,EAAD,CAAV;MACAD,OAAO,CAAC,EAAD,CAAP;IACD,CA7BH;EA8BD,CAjCQ,EAiCN,EAjCM,CAAT;EAmCA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IAAe,IAAI,EAAEL,IAArB;IAA2B,OAAO,EAAEC,OAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAKD,CA7CD;;AA+CA,eAAe,SAASqC,cAAT,GAA0B;EACvC,oBAAO,oBAAC,gBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AACD"},"metadata":{},"sourceType":"module"}