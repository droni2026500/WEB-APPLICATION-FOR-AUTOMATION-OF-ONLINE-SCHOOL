{"ast":null,"code":"import _slicedToArray from \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/components/curators/Curators.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport SelectCustom from \"../UI/Curators/SelectCustom\";\nimport { Context } from \"../../index\";\nimport CuratorTable12 from \"./CuratorsTable1\";\nimport { observer } from \"mobx-react-lite\";\n\nfunction Curators() {\n  var _useContext = useContext(Context),\n      store = _useContext.store; // const [flow, setFlow] = React.useState(\"\");\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      flowData = _useState2[0],\n      setFlowData = _useState2[1]; // const [curator, setCurator] = React.useState(\"\");\n\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      curatorData = _React$useState2[0],\n      setCuratorData = _React$useState2[1];\n\n  useEffect(function () {\n    if (!flowData.length) {\n      store.getCuratorTableFlows().then(function (response) {\n        var requiredDataFromResponse = response;\n        var data = requiredDataFromResponse.map(function (eachSensorItem) {\n          return {\n            value: eachSensorItem.value,\n            text: eachSensorItem.text\n          };\n        }); // console.log(data);\n\n        setFlowData(data);\n      });\n    } // .catch((error) => {\n    //   setFlow1([]);\n    //   console.log(error);\n    // });\n\n  }, [flowData]);\n  useEffect(function () {\n    if (store.flow) {\n      store.getCuratorTableCurators(store.flow).then(function (response) {\n        var requiredDataFromResponse = response;\n        var data = requiredDataFromResponse.map(function (eachSensorItem) {\n          return {\n            value: eachSensorItem.value,\n            text: eachSensorItem.text\n          };\n        });\n        console.log(data);\n        setCuratorData(data);\n      });\n    }\n  }, [store.flow]);\n\n  var handleChangeFlow = function handleChangeFlow(event) {\n    store.setCurator(\"\");\n    store.setFlow(event.target.value);\n  };\n\n  var handleChangeCurator = function handleChangeCurator(event) {\n    console.log(event.target.name);\n    store.setCurator(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SelectCustom, {\n    inputLabel: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0442\\u043E\\u043A\\u0430\",\n    onChange: handleChangeFlow,\n    data: flowData,\n    value: store.flow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), store.flow && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectCustom, {\n    inputLabel: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B\",\n    onChange: handleChangeCurator,\n    data: curatorData,\n    value: store.curator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), store.flow && store.curator && /*#__PURE__*/React.createElement(CuratorTable12, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 39\n    }\n  }));\n} // return (\n//   <div>\n//       <FormControl>\n//           <SelectCurator></SelectCurator>\n//           <SelectFlow></SelectFlow>\n//       </FormControl>\n//     <MyModal visible={modal} setVisible={setModal}>\n//       <CuratorsTableFormAdd />\n//     </MyModal>\n//     <button onClick={() => setModal(true)}>Создать таблицу</button>\n//     <CuratorsTable />\n//   </div>\n// );\n// }\n\n\nexport default observer(Curators);","map":{"version":3,"names":["React","useContext","useEffect","useState","SelectChangeEvent","SelectCustom","Context","CuratorTable12","observer","Curators","store","flowData","setFlowData","curatorData","setCuratorData","length","getCuratorTableFlows","then","response","requiredDataFromResponse","data","map","eachSensorItem","value","text","flow","getCuratorTableCurators","console","log","handleChangeFlow","event","setCurator","setFlow","target","handleChangeCurator","name","curator"],"sources":["/Users/skhotwow/Desktop/Диплом/client/src/components/curators/Curators.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport SelectCustom from \"../UI/Curators/SelectCustom\";\nimport { Context } from \"../../index\";\nimport CuratorTable12 from \"./CuratorsTable1\";\nimport {observer} from \"mobx-react-lite\";\n\nfunction Curators() {\n  const { store } = useContext(Context);\n  // const [flow, setFlow] = React.useState(\"\");\n  const [flowData, setFlowData] = useState([]);\n  // const [curator, setCurator] = React.useState(\"\");\n  const [curatorData, setCuratorData] = React.useState([]);\n\n  useEffect(() => {\n    if (!flowData.length) {\n      store.getCuratorTableFlows().then((response) => {\n        const requiredDataFromResponse = response;\n        const data = requiredDataFromResponse.map((eachSensorItem) => ({\n          value: eachSensorItem.value,\n          text: eachSensorItem.text,\n        }));\n        // console.log(data);\n        setFlowData(data);\n      });\n    }\n    // .catch((error) => {\n    //   setFlow1([]);\n    //   console.log(error);\n    // });\n  }, [flowData]);\n\n  useEffect(()=>{\n    if(store.flow){\n      store.getCuratorTableCurators(store.flow).then((response) => {\n        const requiredDataFromResponse = response;\n        const data = requiredDataFromResponse.map((eachSensorItem) => ({\n          value: eachSensorItem.value,\n          text: eachSensorItem.text,\n        }));\n        console.log(data);\n        setCuratorData(data);\n      });\n  }}, [store.flow]);\n\n\n  const handleChangeFlow = (event: SelectChangeEvent) => {\n    store.setCurator(\"\");\n    store.setFlow(event.target.value);\n  };\n\n\n  const handleChangeCurator = (event: SelectChangeEvent) => {\n    console.log(event.target.name)\n    store.setCurator(event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <SelectCustom\n          inputLabel=\"Название потока\"\n          onChange={handleChangeFlow}\n          data={flowData}\n          value={store.flow}\n        />\n      </div>\n      {store.flow && (\n        <div>\n          <SelectCustom\n            inputLabel=\"Выбор таблицы\"\n            onChange={handleChangeCurator}\n            data={curatorData}\n            value={store.curator}\n          />\n        </div>\n      )}\n      {store.flow && store.curator && <CuratorTable12 />}\n    </>\n  );\n}\n\n// return (\n//   <div>\n//       <FormControl>\n//           <SelectCurator></SelectCurator>\n//           <SelectFlow></SelectFlow>\n//       </FormControl>\n//     <MyModal visible={modal} setVisible={setModal}>\n//       <CuratorsTableFormAdd />\n//     </MyModal>\n//     <button onClick={() => setModal(true)}>Создать таблицу</button>\n//     <CuratorsTable />\n//   </div>\n// );\n// }\n\nexport default observer(Curators);\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;AAEA,SAASC,QAAT,GAAoB;EAAA,kBACAR,UAAU,CAACK,OAAD,CADV;EAAA,IACVI,KADU,eACVA,KADU,EAElB;;;EAFkB,gBAGcP,QAAQ,CAAC,EAAD,CAHtB;EAAA;EAAA,IAGXQ,QAHW;EAAA,IAGDC,WAHC,kBAIlB;;;EAJkB,sBAKoBZ,KAAK,CAACG,QAAN,CAAe,EAAf,CALpB;EAAA;EAAA,IAKXU,WALW;EAAA,IAKEC,cALF;;EAOlBZ,SAAS,CAAC,YAAM;IACd,IAAI,CAACS,QAAQ,CAACI,MAAd,EAAsB;MACpBL,KAAK,CAACM,oBAAN,GAA6BC,IAA7B,CAAkC,UAACC,QAAD,EAAc;QAC9C,IAAMC,wBAAwB,GAAGD,QAAjC;QACA,IAAME,IAAI,GAAGD,wBAAwB,CAACE,GAAzB,CAA6B,UAACC,cAAD;UAAA,OAAqB;YAC7DC,KAAK,EAAED,cAAc,CAACC,KADuC;YAE7DC,IAAI,EAAEF,cAAc,CAACE;UAFwC,CAArB;QAAA,CAA7B,CAAb,CAF8C,CAM9C;;QACAZ,WAAW,CAACQ,IAAD,CAAX;MACD,CARD;IASD,CAXa,CAYd;IACA;IACA;IACA;;EACD,CAhBQ,EAgBN,CAACT,QAAD,CAhBM,CAAT;EAkBAT,SAAS,CAAC,YAAI;IACZ,IAAGQ,KAAK,CAACe,IAAT,EAAc;MACZf,KAAK,CAACgB,uBAAN,CAA8BhB,KAAK,CAACe,IAApC,EAA0CR,IAA1C,CAA+C,UAACC,QAAD,EAAc;QAC3D,IAAMC,wBAAwB,GAAGD,QAAjC;QACA,IAAME,IAAI,GAAGD,wBAAwB,CAACE,GAAzB,CAA6B,UAACC,cAAD;UAAA,OAAqB;YAC7DC,KAAK,EAAED,cAAc,CAACC,KADuC;YAE7DC,IAAI,EAAEF,cAAc,CAACE;UAFwC,CAArB;QAAA,CAA7B,CAAb;QAIAG,OAAO,CAACC,GAAR,CAAYR,IAAZ;QACAN,cAAc,CAACM,IAAD,CAAd;MACD,CARD;IASH;EAAC,CAXO,EAWL,CAACV,KAAK,CAACe,IAAP,CAXK,CAAT;;EAcA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA8B;IACrDpB,KAAK,CAACqB,UAAN,CAAiB,EAAjB;IACArB,KAAK,CAACsB,OAAN,CAAcF,KAAK,CAACG,MAAN,CAAaV,KAA3B;EACD,CAHD;;EAMA,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,KAAD,EAA8B;IACxDH,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACG,MAAN,CAAaE,IAAzB;IACAzB,KAAK,CAACqB,UAAN,CAAiBD,KAAK,CAACG,MAAN,CAAaV,KAA9B;EACD,CAHD;;EAKA,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IACE,UAAU,EAAC,uFADb;IAEE,QAAQ,EAAEM,gBAFZ;IAGE,IAAI,EAAElB,QAHR;IAIE,KAAK,EAAED,KAAK,CAACe,IAJf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,EASGf,KAAK,CAACe,IAAN,iBACC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IACE,UAAU,EAAC,2EADb;IAEE,QAAQ,EAAES,mBAFZ;IAGE,IAAI,EAAErB,WAHR;IAIE,KAAK,EAAEH,KAAK,CAAC0B,OAJf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAVJ,EAmBG1B,KAAK,CAACe,IAAN,IAAcf,KAAK,CAAC0B,OAApB,iBAA+B,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAnBlC,CADF;AAuBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe5B,QAAQ,CAACC,QAAD,CAAvB"},"metadata":{},"sourceType":"module"}