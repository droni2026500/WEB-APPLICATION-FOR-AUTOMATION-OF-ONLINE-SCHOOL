{"ast":null,"code":"import _slicedToArray from \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/skhotwow/Desktop/\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C/client/src/components/curators/Curators.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport SelectCustom from \"../UI/Curators/SelectCustom\";\nimport { Context } from \"../../index\";\nimport CuratorTable12 from \"./CuratorsTable1\";\nimport { observer } from \"mobx-react-lite\";\n\nfunction Curators() {\n  var _useContext = useContext(Context),\n      store = _useContext.store;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flow = _React$useState2[0],\n      setFlow = _React$useState2[1]; // const [flowData, setFlowData] = useState([]);\n\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      curator = _React$useState4[0],\n      setCurator = _React$useState4[1]; // const [curatorData, setCuratorData] = React.useState([]);\n\n\n  useEffect(function () {\n    if (!store.flowData.length) {\n      store.getCuratorTableFlows().then(function (response) {\n        var requiredDataFromResponse = response;\n        var data = requiredDataFromResponse.map(function (eachSensorItem) {\n          return {\n            value: eachSensorItem.value,\n            text: eachSensorItem.text\n          };\n        }); // console.log(data);\n\n        store.setFlowData(data);\n      });\n    } // .catch((error) => {\n    //   setFlow1([]);\n    //   console.log(error);\n    // });\n\n  }, [store.flowData]);\n  useEffect(function () {\n    if (flow) {\n      store.getCuratorTableCurators(flow).then(function (response) {\n        var requiredDataFromResponse = response;\n        var data = requiredDataFromResponse.map(function (eachSensorItem) {\n          return {\n            value: eachSensorItem.value,\n            text: eachSensorItem.text\n          };\n        });\n        console.log(data);\n        store.setCuratorData(data);\n      });\n    }\n  }, [flow]);\n\n  var handleChangeFlow = function handleChangeFlow(event) {\n    setCurator(\"\");\n    console.log(event.target);\n    setFlow(event.target.value);\n    console.log(flow);\n  };\n\n  var handleChangeCurator = function handleChangeCurator(event) {\n    console.log(event.target.name);\n    setCurator(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SelectCustom, {\n    inputLabel: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0442\\u043E\\u043A\\u0430\",\n    onChange: handleChangeFlow,\n    data: store.flowData,\n    value: flow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), flow && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectCustom, {\n    inputLabel: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B\",\n    onChange: handleChangeCurator,\n    data: store.curatorData,\n    value: curator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), flow && curator && /*#__PURE__*/React.createElement(CuratorTable12, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }\n  }));\n} // return (\n//   <div>\n//       <FormControl>\n//           <SelectCurator></SelectCurator>\n//           <SelectFlow></SelectFlow>\n//       </FormControl>\n//     <MyModal visible={modal} setVisible={setModal}>\n//       <CuratorsTableFormAdd />\n//     </MyModal>\n//     <button onClick={() => setModal(true)}>Создать таблицу</button>\n//     <CuratorsTable />\n//   </div>\n// );\n// }\n\n\nexport default observer(Curators);","map":{"version":3,"names":["React","useContext","useEffect","useState","SelectChangeEvent","SelectCustom","Context","CuratorTable12","observer","Curators","store","flow","setFlow","curator","setCurator","flowData","length","getCuratorTableFlows","then","response","requiredDataFromResponse","data","map","eachSensorItem","value","text","setFlowData","getCuratorTableCurators","console","log","setCuratorData","handleChangeFlow","event","target","handleChangeCurator","name","curatorData"],"sources":["/Users/skhotwow/Desktop/Диплом/client/src/components/curators/Curators.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SelectChangeEvent } from \"@mui/material\";\nimport SelectCustom from \"../UI/Curators/SelectCustom\";\nimport { Context } from \"../../index\";\nimport CuratorTable12 from \"./CuratorsTable1\";\nimport {observer} from \"mobx-react-lite\";\n\nfunction Curators() {\n  const { store } = useContext(Context);\n  const [flow, setFlow] = React.useState(\"\");\n  // const [flowData, setFlowData] = useState([]);\n  const [curator, setCurator] = React.useState(\"\");\n  // const [curatorData, setCuratorData] = React.useState([]);\n\n  useEffect(() => {\n    if (!store.flowData.length) {\n      store.getCuratorTableFlows().then((response) => {\n        const requiredDataFromResponse = response;\n        const data = requiredDataFromResponse.map((eachSensorItem) => ({\n          value: eachSensorItem.value,\n          text: eachSensorItem.text,\n        }));\n        // console.log(data);\n        store.setFlowData(data);\n      });\n    }\n    // .catch((error) => {\n    //   setFlow1([]);\n    //   console.log(error);\n    // });\n  }, [store.flowData]);\n\n  useEffect(()=>{\n    if(flow){\n      store.getCuratorTableCurators(flow).then((response) => {\n        const requiredDataFromResponse = response;\n        const data = requiredDataFromResponse.map((eachSensorItem) => ({\n          value: eachSensorItem.value,\n          text: eachSensorItem.text,\n        }));\n        console.log(data);\n        store.setCuratorData(data);\n      });\n  }}, [flow]);\n\n\n  const handleChangeFlow = (event: SelectChangeEvent) => {\n    setCurator(\"\");\n    console.log(event.target)\n    setFlow(event.target.value);\n    console.log(flow)\n  };\n\n\n  const handleChangeCurator = (event: SelectChangeEvent) => {\n    console.log(event.target.name)\n    setCurator(event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <SelectCustom\n          inputLabel=\"Название потока\"\n          onChange={handleChangeFlow}\n          data={store.flowData}\n          value={flow}\n        />\n      </div>\n      {flow && (\n        <div>\n          <SelectCustom\n            inputLabel=\"Выбор таблицы\"\n            onChange={handleChangeCurator}\n            data={store.curatorData}\n            value={curator}\n          />\n        </div>\n      )}\n      {flow && curator && <CuratorTable12 />}\n    </>\n  );\n}\n\n// return (\n//   <div>\n//       <FormControl>\n//           <SelectCurator></SelectCurator>\n//           <SelectFlow></SelectFlow>\n//       </FormControl>\n//     <MyModal visible={modal} setVisible={setModal}>\n//       <CuratorsTableFormAdd />\n//     </MyModal>\n//     <button onClick={() => setModal(true)}>Создать таблицу</button>\n//     <CuratorsTable />\n//   </div>\n// );\n// }\n\nexport default observer(Curators);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}